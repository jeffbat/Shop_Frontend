{"ast":null,"code":"import{createStore,combineReducers,applyMiddleware}from'redux';import thunk from'redux-thunk';import{composeWithDevTools}from'redux-devtools-extension';import{productListReducer,productDetailsReducer}from'./reducers/productReducers';import{cartReducer}from'./reducers/cartReducers';import{userLoginReducer,userRegisterReducer}from'./reducers/userReducers';var reducer=combineReducers({productList:productListReducer,productDetails:productDetailsReducer,cart:cartReducer,userLogin:userLoginReducer,userRegister:userRegisterReducer});var cartItemsFromStorage=localStorage.getItem('cartItems')?JSON.parse(localStorage.getItem('cartItems')):[];var userInfoFromStorage=localStorage.getItem('userInfo')?JSON.parse(localStorage.getItem('userInfo')):null;var initialState={cart:{cartItems:cartItemsFromStorage},userLogin:{userInfo:userInfoFromStorage}};var middleware=[thunk];var store=createStore(reducer,initialState,composeWithDevTools(applyMiddleware.apply(void 0,middleware)));export default store;","map":{"version":3,"sources":["/Users/ebat/dev/ecommerce/backend/frontend/src/store.js"],"names":["createStore","combineReducers","applyMiddleware","thunk","composeWithDevTools","productListReducer","productDetailsReducer","cartReducer","userLoginReducer","userRegisterReducer","reducer","productList","productDetails","cart","userLogin","userRegister","cartItemsFromStorage","localStorage","getItem","JSON","parse","userInfoFromStorage","initialState","cartItems","userInfo","middleware","store"],"mappings":"AAAA,OAASA,WAAT,CAAsBC,eAAtB,CAAuCC,eAAvC,KAA8D,OAA9D,CACA,MAAOC,CAAAA,KAAP,KAAkB,aAAlB,CACA,OAASC,mBAAT,KAAmC,0BAAnC,CACA,OAASC,kBAAT,CAA6BC,qBAA7B,KAA0D,4BAA1D,CACA,OAASC,WAAT,KAA4B,yBAA5B,CACA,OAASC,gBAAT,CAA2BC,mBAA3B,KAAsD,yBAAtD,CAKA,GAAMC,CAAAA,OAAO,CAAGT,eAAe,CAAC,CAC5BU,WAAW,CAAEN,kBADe,CAE5BO,cAAc,CAAEN,qBAFY,CAG5BO,IAAI,CAAEN,WAHsB,CAI5BO,SAAS,CAAEN,gBAJiB,CAK5BO,YAAY,CAAEN,mBALc,CAAD,CAA/B,CAQA,GAAMO,CAAAA,oBAAoB,CAAGC,YAAY,CAACC,OAAb,CAAqB,WAArB,EACzBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,WAArB,CAAX,CADyB,CACuB,EADpD,CAGA,GAAMG,CAAAA,mBAAmB,CAAGJ,YAAY,CAACC,OAAb,CAAqB,UAArB,EACxBC,IAAI,CAACC,KAAL,CAAWH,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAX,CADwB,CACuB,IADnD,CAIA,GAAMI,CAAAA,YAAY,CAAG,CACjBT,IAAI,CAAC,CAAEU,SAAS,CAAEP,oBAAb,CADY,CAEjBF,SAAS,CAAE,CAAEU,QAAQ,CAAEH,mBAAZ,CAFM,CAArB,CAMA,GAAMI,CAAAA,UAAU,CAAG,CAACtB,KAAD,CAAnB,CAEA,GAAMuB,CAAAA,KAAK,CAAG1B,WAAW,CAACU,OAAD,CAAUY,YAAV,CACrBlB,mBAAmB,CAACF,eAAe,MAAf,QAAmBuB,UAAnB,CAAD,CADE,CAAzB,CAII,cAAeC,CAAAA,KAAf","sourcesContent":["import { createStore, combineReducers, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { composeWithDevTools} from 'redux-devtools-extension'\nimport { productListReducer, productDetailsReducer } from './reducers/productReducers'\nimport { cartReducer } from './reducers/cartReducers'\nimport { userLoginReducer, userRegisterReducer } from './reducers/userReducers'\n\n\n\n\nconst reducer = combineReducers({\n    productList: productListReducer,\n    productDetails: productDetailsReducer,\n    cart: cartReducer,\n    userLogin: userLoginReducer,\n    userRegister: userRegisterReducer,\n})\n\nconst cartItemsFromStorage = localStorage.getItem('cartItems') ?\n    JSON.parse(localStorage.getItem('cartItems')) : []\n\nconst userInfoFromStorage = localStorage.getItem('userInfo') ?\n    JSON.parse(localStorage.getItem('userInfo')) : null\n\n\nconst initialState = {\n    cart:{ cartItems: cartItemsFromStorage },\n    userLogin: { userInfo: userInfoFromStorage }\n}\n\n\nconst middleware = [thunk]\n\nconst store = createStore(reducer, initialState,\n    composeWithDevTools(applyMiddleware(...middleware)))\n\n\n    export default store\n"]},"metadata":{},"sourceType":"module"}